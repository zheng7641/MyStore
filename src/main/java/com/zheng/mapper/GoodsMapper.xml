<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheng.dao.GoodsDao">
	<resultMap type="Goods" id="GoodsMap">
		<id property="goodsId" column="goodsId"/>
		<result property="goodsName" column="goodsName"/>
		<result property="goodsDescription" column="goodsDescription"/>
		<result property="price" column="price"/>
		<result property="quality" column="quality"/>
		<result property="tradingPostion" column="tradingPostion"/>
		<result property="contactInformation" column="contactInformation"/>
		<result property="businessDeal" column="businessDeal"/>
		<result property="createTime" column="createTime"/>
		<result property="userId" column="userId"/>
		<result property="typeId" column="typeId"/>
	</resultMap>
	
	<resultMap type="Goods" id="GoodsImgMessage" extends="GoodsMap">
		<collection property="imagesList" ofType="Images" column="goodsId">
			<id property="imagesId" column="imagesId" />
			<result property="imagesUrl" column="imagesUrl" />
		</collection>
		<collection property="goodsMessage" ofType="GoodsMessage" column="goodsId">
			<id property="goodsMessageId" column="goodsMessageId" />
			<result property="message" column="message" />
			<result property="createTime" column="createTime" />
		</collection>
	</resultMap>
	
	<insert id="add">
		insert into 
		goods(goodsName,goodsDescription,price,quality,tradingPosition,contactInformation,businessDeal,CreateTime,typeId,userId)
		values(#{goodsName},#{goodsDescription},#{price},#{quality},#{tradingPosition},#{contactInformation},#{businessDeal},#{CreateTime},#{typeId},#{userId})
	</insert>
	
	<select id="getByType" resultMap="GoodsMap">
		select *
		from goods
		where typeId in(
			select typeId
			from type
			where typeName like CONCAT('%',#{typeName},'%')  
		)
		and goodsId limit #{first},#{number}
	</select>

	<select id="getSpecialGoods" resultMap="GoodsMap">
		select *
		from goods
		where typeId in(
			select typeId
			from type
			where typeName like CONCAT('%',#{typeName},'%')  
		)
		and goodsId limit #{first},#{number}
	</select>

	<select id="getGoodsImgMsg" resultMap="GoodsImgMessage">
		select *
		from goods g,images i,goodsMessage gm
		where g.goodsId = i.goodsId
		and g.goodsId = gm.goodsId
		and g.typeId in(
			select typeId
			from type
			where typeName like CONCAT('%',#{typeName},'%')  
		)
		and g.goodsId limit #{first},#{number}
	</select>
	
	<select id="getNewGoods" resultMap="GoodsMap">
		select *  
		from (
			select * 
			from goods g
			order by g.createtime desc
		)a
		where  a.goodsid limit #{first},#{number}
	</select>
	
	<select id="getTotal" resultType="Integer">
		select count(*) 
		from goods 
		where typeId in (
			select typeId
			from type
			where typeName like CONCAT('%',#{typeName},'%')   
		)
	</select>
	
	<select id="getById" resultMap="GoodsMap">
		select * 
		from goods
		where goodsId = #{id}
	</select>
	
	<select id="getBySeller" resultMap="GoodsMap">
		select *
		from goods
		where userId = #{userId}
	</select>
	
	<select id="getUserId" resultType="Integer">
		select userId
		from goods
		where goodsId = #{goodsId}
	</select>
	
	<select id="getGoods" resultType="Goods">
		select * 
		from goods
		where goodsName=#{goodsName}
		and price = #{price}
		and tradingPosition = #{tradingPosition}
		and contactInformation = #{contactInformation}
		and businessDeal = #{businessDeal}
	</select>
	
	<delete id="delete">
		delete from goods where goodsId = #{goodsId}
	</delete>
	
	<select id="getPublishNum" resultType="Integer">
		select count(*)
		from goods
		where userId = #{userId}
	</select>
	
	<select id="getByUserId2" resultType="Goods">
		select * 
		from goods
		where userId = #{userId}
		and goodsId limit #{first},#{number}
	</select>
	
	<select id="getOrderList" resultType="Goods">
		select * 
		from goods 
		where goodsId in
			(
				select distinct goodsId 
				from t_order 
				where userId =#{userId}
			)
		and goodsId limit #{first},#{number}
	</select>
	
	<select id="getList" parameterType="Integer" resultMap="GoodsMap">
		select * 
		from goods
		where goodsId limit #{first},#{number}
	</select>
	
	<select id="getCount" resultType="Integer">
		select count(*) from goods;
	</select>
	
	<select id="getSearchNum" parameterType="String" resultType="Integer">
		select count(*)
		from goods
		where goodsName like CONCAT('%',#{search},'%')  
	</select>
	
	<select id="getSearchList" resultType="Goods">
		select *
		from goods
		where goodsName like CONCAT('%',#{search},'%')  
		and goodsId limit #{first},#{number}
	</select>
</mapper>